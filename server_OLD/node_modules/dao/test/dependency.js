var dao = require('./..');

describe('Dependencies', function() {
  it('should be properly parsed from a string', function() {
    var app = dao.App();
    var plugin = { name : "p", deps : "a, b,    c"};

    app.use(plugin);
    app.plugins["p"].deps.should.eql(["a", "b", "c"]);
  });

  describe('should throw an error when dependency is missing', function() {
    it('parallel', function(done) {
      var app = dao.App()
        , plugin = { deps : "missing", init : function() {} }

      app.use(plugin);
      app.init(function(err) {
        err.should.eql(new Error('Unresolved dependency'));
        done();
      })
    });

    it('sequential', function(done) {
      var app = dao.App()
        , plugin = { deps : "missing", init : function() {}}

      app.use(plugin);
      app.initSequentially(function(err) {
        err.should.eql(new Error('Unresolved dependency'));
        done();
      })

    })

  });

  describe('dependency loops should throw an error while initiating', function() {
    it('parallel', function(done) {
      var app = dao.App()
        , p1 = { name : "p1", deps : "p2", init : function() {} }
        , p2 = { name : "p2", deps : "p1", init : function() {} }

      app.use(p1);
      app.use(p2);
      app.init(function(err) {
        err.should.eql(new Error('Unresolved dependency'));
        done();        
      })
    })
  })

});